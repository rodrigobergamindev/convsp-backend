// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Worker {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  code String @unique @db.ObjectId
  photo String?
  status Status @default(ATIVO)
  name  String
  role Role @default(UNDEFINED)
  office Office[] @default([UNDEFINED])
  rg String @unique
  cpf String @unique
  birth DateTime
  consagration DateTime?
  phoneNumber String?
  email String?
  document WorkerDocument[]
  address WorkerAddress?
  church Church @relation(fields: [churchCode], references: [code], onDelete: Cascade, onUpdate: Cascade)
  churchCode String @unique @db.ObjectId 

  createdAt DateTime @default(now())
  updatedAt DateTime? @updatedAt
 
}


model WorkerDocument {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  key String @unique
  url String
  worker Worker @relation(fields: [workerId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  workerId String @unique @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime? @updatedAt
}

model ChurchDocument {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  key String @unique
  url String
  church Church @relation(fields: [churchId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  churchId String @unique @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime? @updatedAt
}


model Church  {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  code String @unique @db.ObjectId
  situacao Situacao @default(ATIVA)
  name  String
  type ChurchType @default(UNDEFINED)
  region String
  cnpj String?
  templo Templo @default(PROPRIO)
  membros Int
  address ChurchAddress?
  phoneNumber String
  email String
  document ChurchDocument[]
  observacao ChurchObservacao[]
  superintendencia Superintendencia @relation(fields: [superintendenciaId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  superintendenciaId String @unique @db.ObjectId  
  workers Worker[]

  createdAt DateTime @default(now())
  updatedAt DateTime? @updatedAt
  
  
}

model Superintendencia {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  code String @unique @db.ObjectId
  church Church[]
}

model WorkerAddress {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  type String
  place String
  number String
  complement String?
  district String
  city String
  state String
  zip_code String
  worker   Worker   @relation(fields: [workerId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  workerId String @unique @db.ObjectId 

  createdAt DateTime @default(now())
  updatedAt DateTime? @updatedAt
}

model ChurchAddress {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  type String
  place String
  number String
  complement String?
  district String
  city String
  state String
  zip_code String
  church   Church   @relation(fields: [churchId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  churchId String @unique @db.ObjectId 

  createdAt DateTime @default(now())
  updatedAt DateTime? @updatedAt
}


model ChurchObservacao {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  church Church @relation(fields: [churchId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  churchId String @unique @db.ObjectId 
}

model WorkerObservacao {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
}

enum Office {
  UNDEFINED
  SUPERINTENDENTE
  PRESIDENTE
  DIRIGENTE
  SECRETARIO
  JUBILADO
  AUXILIAR
}

enum ChurchType {
  SUPERITENDENTE
  SEDE
  CONGREGACAO
  UNDEFINED
}

enum Status {
  ATIVO
  DESATIVADO
  INATIVO
  DESLIGADO
}

enum Templo {
  PROPRIO
  ALUGADO
  OUTRO
}

enum Situacao {
  DESATIVADA
  ATIVA
}

enum Role {
  UNDEFINED
  CANDIDATO
  PRESBITERO
  MISSIONARIA
  EVANGELISTA
  PASTOR
}